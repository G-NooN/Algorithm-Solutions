/*
  <문제(Lv.1) - 정수 제곱근 판별>

  임의의 양의 정수 n에 대하여, n이 어떤 양의 정수 x의 제곱인지 아닌지 판단하려 한다.
  n이 양의 정수 x의 제곱이라면 x+1의 제곱을 return하고,
  n이 양의 정수 x의 제곱이 아니라면 -1을 return하는 Solution 함수를 완성하라.

  [제한사항]
  1. n은 1 이상, 50,000,000,000,000 이하인 양의 정수다.

  [입출력 예시]
  121 => 144 (121 = 11^2 → (11+1)^2 = 144)
  3 => -1
*/

/*
  [해결 방법]
  1. 결과값을 출력할 변수를 선언
  2. Math.sqrt()를 사용하여 n의 제곱근을 구함
  3. 정수를 구분하기 위해 Math.sqrt(n)이 1로 나누어 떨어지는 지 계산
  3-1. n이 어떤 양의 정수 x의 제곱수인 경우, Math.pow()를 사용하여 x+1의 제곱수를 결과값으로 설정
  3-2. n이 어떤 양의 정수 x의 제곱수가 아닌 경우, -1을 결과값으로 설정
  4. 결과값 출력
*/

// let n1 = 121;
// let n2 = 3;

function solution(n) {
  let answer = 0;
  let sqrtN = Math.sqrt(n); // n의 제곱근

  // 정수를 구분 (소수는 1로 나눴을 때 소수 부분이 남아서 0이 아님)
  if (sqrtN % 1 === 0) {
    // n이 어떤 양의 정수의 제곱수인 경우, 해당 제곱근+1의 제곱수를 결과값으로 설정
    answer = Math.pow(sqrtN + 1, 2);
  } else {
    // n이 어떤 양의 정수의 제곱수가 아닌 경우
    answer = -1;
  }

  // 삼항 연산자
  answer = sqrtN % 1 === 0 ? Math.pow(sqrtN + 1, 2) : -1;

  // 결과값 출력
  return answer;
}

// console.log(solution(n1));
// console.log(solution(n2));
